// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pessoa.api.Infraestructura.Data;

namespace pessoa.api.Migrations
{
    [DbContext(typeof(PessoaDbContext))]
    partial class PessoaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("pessoa.api.Business.Entity.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .HasColumnType("longtext");

                    b.Property<int>("Cep")
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<string>("Logradouro")
                        .HasColumnType("longtext");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ENDERECO");
                });

            modelBuilder.Entity("pessoa.api.Business.Entity.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<long>("Cpf")
                        .HasColumnType("bigint");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int?>("PessoaTelefoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("PessoaTelefoneId");

                    b.ToTable("PESSOA");
                });

            modelBuilder.Entity("pessoa.api.Business.Entity.PessoaTelefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PessoaId")
                        .HasColumnType("int");

                    b.Property<int>("TelefoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.HasIndex("TelefoneId");

                    b.ToTable("PESSOA_TELEFONE");
                });

            modelBuilder.Entity("pessoa.api.Business.Entity.Telefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Ddd")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int?>("PessoaId")
                        .HasColumnType("int");

                    b.Property<int?>("PessoaTelefoneId")
                        .HasColumnType("int");

                    b.Property<int>("TipoTelefoneId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoTelefoneId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.HasIndex("PessoaTelefoneId");

                    b.HasIndex("TipoTelefoneId");

                    b.HasIndex("TipoTelefoneId1");

                    b.ToTable("TELEFONE");
                });

            modelBuilder.Entity("pessoa.api.Business.Entity.TipoTelefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TELEFONE_TIPO");
                });

            modelBuilder.Entity("pessoa.api.Business.Entity.Pessoa", b =>
                {
                    b.HasOne("pessoa.api.Business.Entity.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pessoa.api.Business.Entity.PessoaTelefone", null)
                        .WithMany("Pessoas")
                        .HasForeignKey("PessoaTelefoneId");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("pessoa.api.Business.Entity.PessoaTelefone", b =>
                {
                    b.HasOne("pessoa.api.Business.Entity.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pessoa.api.Business.Entity.Telefone", "Telefone")
                        .WithMany()
                        .HasForeignKey("TelefoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");

                    b.Navigation("Telefone");
                });

            modelBuilder.Entity("pessoa.api.Business.Entity.Telefone", b =>
                {
                    b.HasOne("pessoa.api.Business.Entity.Pessoa", null)
                        .WithMany("Telefones")
                        .HasForeignKey("PessoaId");

                    b.HasOne("pessoa.api.Business.Entity.PessoaTelefone", null)
                        .WithMany("Telefones")
                        .HasForeignKey("PessoaTelefoneId");

                    b.HasOne("pessoa.api.Business.Entity.TipoTelefone", "TipoTelefone")
                        .WithMany()
                        .HasForeignKey("TipoTelefoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pessoa.api.Business.Entity.TipoTelefone", null)
                        .WithMany("Telefones")
                        .HasForeignKey("TipoTelefoneId1");

                    b.Navigation("TipoTelefone");
                });

            modelBuilder.Entity("pessoa.api.Business.Entity.Pessoa", b =>
                {
                    b.Navigation("Telefones");
                });

            modelBuilder.Entity("pessoa.api.Business.Entity.PessoaTelefone", b =>
                {
                    b.Navigation("Pessoas");

                    b.Navigation("Telefones");
                });

            modelBuilder.Entity("pessoa.api.Business.Entity.TipoTelefone", b =>
                {
                    b.Navigation("Telefones");
                });
#pragma warning restore 612, 618
        }
    }
}
